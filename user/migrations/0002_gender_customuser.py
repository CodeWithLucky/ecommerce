# Generated by Django 5.0.1 on 2024-06-03 10:22

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('phone_number', models.IntegerField(null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='avatar')),
                ('address_line_1', models.CharField(blank=True, max_length=255, verbose_name='address line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=255, verbose_name='address line 2')),
                ('city', models.CharField(blank=True, max_length=50, verbose_name='city')),
                ('state_province_region', models.CharField(blank=True, max_length=100, verbose_name='state/province/region')),
                ('postal_zip_code', models.CharField(blank=True, max_length=12, verbose_name='postal/zip code')),
                ('country', models.CharField(blank=True, max_length=50, verbose_name='country')),
                ('company_name', models.CharField(blank=True, max_length=100, verbose_name='company name')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='position')),
                ('website_url', models.URLField(blank=True, verbose_name='website URL')),
                ('twitter_handle', models.URLField(blank=True, verbose_name='Twitter handle')),
                ('facebook_profile', models.URLField(blank=True, verbose_name='Facebook profile URL')),
                ('linkedin_profile', models.URLField(blank=True, verbose_name='LinkedIn profile URL')),
                ('instagram_handle', models.CharField(blank=True, max_length=30, verbose_name='Instagram handle')),
                ('preferences', models.JSONField(blank=True, null=True, verbose_name='preferences')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('sex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.gender')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
